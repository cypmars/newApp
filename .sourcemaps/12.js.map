{"version":3,"sources":["../../src/pages/askInfo/askInfo.module.ts","../../node_modules/@ionic-native/email-composer/index.js","../../src/pages/askInfo/askInfo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AAEa;AACrB;AAgBxC,IAAa,iBAAiB;IAA9B;IAAiC,CAAC;IAAD,wBAAC;AAAD,CAAC;AAArB,iBAAiB;IAd7B,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAW;SACZ;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;SACtC;QACD,SAAS,EAAE;YACT,mFAAa;SACd;QACD,OAAO,EAAE;YACP,6DAAW;SACZ;KACF,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;ACpB9B;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,6DAA6D,QAAQ;AACrE;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,2BAA2B,O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","file":"12.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { EmailComposer } from '@ionic-native/email-composer';\r\nimport { AskInfoPage } from './askInfo';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AskInfoPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(AskInfoPage)\r\n  ],\r\n  providers: [\r\n    EmailComposer\r\n  ],\r\n  exports: [\r\n    AskInfoPage\r\n  ]\r\n})\r\nexport class AskInfoPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/askInfo/askInfo.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Email Composer\n * @description\n *\n * Requires Cordova plugin: cordova-plugin-email-composer. For more info, please see the [Email Composer plugin docs](https://github.com/hypery2k/cordova-email-plugin).\n *\n *\n * @usage\n * ```typescript\n * import { EmailComposer } from '@ionic-native/email-composer';\n *\n * constructor(private emailComposer: EmailComposer) { }\n *\n * ...\n *\n *\n * this.emailComposer.isAvailable().then((available: boolean) =>{\n *  if(available) {\n *    //Now we know we can send\n *  }\n * });\n *\n * let email = {\n *   to: 'max@mustermann.de',\n *   cc: 'erika@mustermann.de',\n *   bcc: ['john@doe.com', 'jane@doe.com'],\n *   attachments: [\n *     'file://img/logo.png',\n *     'res://icon.png',\n *     'base64:icon.png//iVBORw0KGgoAAAANSUhEUg...',\n *     'file://README.pdf'\n *   ],\n *   subject: 'Cordova Icons',\n *   body: 'How are you? Nice greetings from Leipzig',\n *   isHtml: true\n * };\n *\n * // Send a text message using default options\n * this.emailComposer.open(email);\n * ```\n *\n * You can also assign aliases to email apps\n * ```ts\n * // add alias\n * this.email.addAlias('gmail', 'com.google.android.gm');\n *\n * // then use alias when sending email\n * this.email.open({\n *   app: 'gmail',\n *   ...\n * });\n * ```\n * @interfaces\n * EmailComposerOptions\n */\nvar EmailComposer = (function (_super) {\n    __extends(EmailComposer, _super);\n    function EmailComposer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmailComposer_1 = EmailComposer;\n    /**\n     * Verifies if sending emails is supported on the device.\n     *\n     * @param [app] {string} App id or uri scheme.\n     * @returns {Promise<any>} Resolves if available, rejects if not available\n     */\n    EmailComposer.prototype.isAvailable = function (app) {\n        return new Promise(function (resolve, reject) {\n            if (app) {\n                EmailComposer_1.getPlugin().isAvailable(app, function (isAvailable) {\n                    if (isAvailable) {\n                        resolve();\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n            else {\n                EmailComposer_1.getPlugin().isAvailable(function (isAvailable) {\n                    if (isAvailable) {\n                        resolve();\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * Request permission to access email accounts information\n     * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if the permission was granted\n     */\n    EmailComposer.prototype.requestPermission = function () { return; };\n    /**\n     * Checks if the app has a permission to access email accounts information\n     * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if the permission was granted\n     */\n    EmailComposer.prototype.hasPermission = function () { return; };\n    /**\n     * Adds a new mail app alias.\n     *\n     * @param alias {string} The alias name\n     * @param packageName {string} The package name\n     */\n    EmailComposer.prototype.addAlias = function (alias, packageName) { };\n    /**\n     * Displays the email composer pre-filled with data.\n     *\n     * @param options {EmailComposerOptions} Email\n     * @param [scope] {any} Scope for the promise\n     * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n     */\n    EmailComposer.prototype.open = function (options, scope) { return; };\n    EmailComposer.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    EmailComposer.ctorParameters = function () { return []; };\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], EmailComposer.prototype, \"isAvailable\", null);\n    __decorate([\n        Cordova({\n            successIndex: 0,\n            errorIndex: 2\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], EmailComposer.prototype, \"requestPermission\", null);\n    __decorate([\n        Cordova({\n            successIndex: 0,\n            errorIndex: 2\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], EmailComposer.prototype, \"hasPermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], EmailComposer.prototype, \"addAlias\", null);\n    __decorate([\n        Cordova({\n            successIndex: 1,\n            errorIndex: 3\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], EmailComposer.prototype, \"open\", null);\n    EmailComposer = EmailComposer_1 = __decorate([\n        Plugin({\n            pluginName: 'EmailComposer',\n            plugin: 'cordova-plugin-email-composer',\n            pluginRef: 'cordova.plugins.email',\n            repo: 'https://github.com/katzer/cordova-plugin-email-composer',\n            platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], EmailComposer);\n    return EmailComposer;\n    var EmailComposer_1;\n}(IonicNativePlugin));\nexport { EmailComposer };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/email-composer/index.js\n// module id = 730\n// module chunks = 12","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { EmailComposer } from '@ionic-native/email-composer';\r\n/**\r\n * The Welcome Page is a splash page that quickly describes the app,\r\n * and then directs the user to create an account or log in.\r\n * If you'd like to immediately put the user onto a login/signup page,\r\n * we recommend not using the Welcome page.\r\n*/\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-askInfo',\r\n  templateUrl: 'askInfo.html'\r\n})\r\nexport class AskInfoPage {\r\n\r\n  tabBarElement: any;\r\n\r\n  mail = {\r\n    about: \"Service\",\r\n    object: \"Objet\",\r\n    text: \"Message\",\r\n    sendBy: {\r\n      firstName: \"Prénom\",\r\n      lastName: \"Nom\",\r\n      email: \"@ email\",\r\n    }\r\n  }\r\n\r\n  submitAttempt: boolean = false;\r\n  askInfoForm: FormGroup;\r\n  serviceId;\r\n  constructor(public navCtrl: NavController,  public navParams: NavParams,\r\n    public toastCtrl: ToastController, public formBuilder: FormBuilder, private emailComposer: EmailComposer) {\r\n      this.tabBarElement = document.querySelector('.tabbar.show-tabbar');\r\n      this.serviceId = navParams.get(\"serviceId\");\r\n      this.mail.about = navParams.get(\"serviceName\");\r\n\r\n      this.askInfoForm = formBuilder.group({\r\n        firstName: ['',  Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n        lastName: ['',  Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n        email: [''],\r\n        about: [''],\r\n        object: [''],\r\n        text: ['']\r\n      });\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    this.tabBarElement.style.display = 'none';\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n    this.tabBarElement.style.display = 'flex';\r\n  }\r\n\r\n  askInfo(){\r\n    this.submitAttempt = true;\r\n    console.log(this.mail);\r\n    if (this.askInfoForm.valid){\r\n      this.emailComposer.isAvailable().then((available: boolean) =>{\r\n        if(available) {\r\n          //Now we know we can send\r\n        }\r\n       });\r\n       \r\n       let email = {\r\n         from: this.mail.sendBy.email,\r\n         to: 'cypconnet@wanadoo.fr',\r\n         subject: this.mail.object,\r\n         body: 'Related to: '+this.mail.about+'<br><br>'+this.mail.text,\r\n         isHtml: true\r\n       };\r\n       \r\n       // Send a text message using default options\r\n       this.emailComposer.open(email);\r\n    }\r\n  }\r\n\r\n  prev(){\r\n    this.tabBarElement.style.display = 'flex';\r\n    this.navCtrl.pop();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/askInfo/askInfo.ts"],"sourceRoot":""}