{"version":3,"sources":["../../../src/@ionic-native/plugins/speech-recognition/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AA2C7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgDG;AASH;IAAuC,qCAAiB;IAAxD;;IAmEA,CAAC;IAjEC;;;OAGG;IAEH,kDAAsB,GAAtB;QACE,MAAM,CAAC;IACT,CAAC;IAED;;;OAGG;IAMH,0CAAc,GAAd,UAAe,OAA2C;QACxD,MAAM,CAAC;IACT,CAAC;IAED;;OAEG;IAIH,yCAAa,GAAb;QACE,MAAM,CAAC;IACT,CAAC;IAED;;;OAGG;IAEH,iDAAqB,GAArB;QACE,MAAM,CAAC;IACT,CAAC;IAED;;;OAGG;IAEH,yCAAa,GAAb;QACE,MAAM,CAAC;IACT,CAAC;IAED;;;OAGG;IAEH,6CAAiB,GAAjB;QACE,MAAM,CAAC;IACT,CAAC;IAEI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IA3DA;QADC,OAAO,EAAE;;;;mEAGT;IAWD;QALC,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;YACxB,UAAU,EAAE,IAAI;SAEjB,CAAC;;;wCAC2D,UAAU;2DAEtE;IAQD;QAHC,OAAO,CAAC;YACP,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC;;;;0DAGD;IAOD;QADC,OAAO,EAAE;;;;kEAGT;IAOD;QADC,OAAO,EAAE;;;;0DAGT;IAOD;QADC,OAAO,EAAE;;;;8DAGT;IA3DU,iBAAiB;QAR7B,MAAM,CAAC;YACN,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,kCAAkC;YAC1C,SAAS,EAAE,2BAA2B;YACtC,IAAI,EAAE,8DAA8D;YACpE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,iBAAiB,CAmE7B;IAAD,wBAAC;CAnED,AAmEC,CAnEsC,iBAAiB,GAmEvD;SAnEY,iBAAiB","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport type SpeechRecognitionListeningOptions = SpeechRecognitionListeningOptionsIOS | SpeechRecognitionListeningOptionsAndroid;\r\n\r\nexport interface SpeechRecognitionListeningOptionsIOS {\r\n  /**\r\n   * used language for recognition (default `\"en-US\"`)\r\n   */\r\n  language?: string;\r\n\r\n  /**\r\n   * umber of return matches (default `5`)\r\n   */\r\n  matches?: number;\r\n\r\n  /**\r\n   * Allow partial results to be returned (default `false`)\r\n   */\r\n  showPartial?: boolean;\r\n}\r\n\r\nexport interface SpeechRecognitionListeningOptionsAndroid {\r\n  /**\r\n   * used language for recognition (default `\"en-US\"`)\r\n   */\r\n  language?: string;\r\n\r\n  /**\r\n   * number of return matches (maximum number of matches)\r\n   */\r\n  matches?: number;\r\n\r\n  /**\r\n   * displayed prompt of listener popup window\r\n   */\r\n  prompt?: string;\r\n\r\n  /**\r\n   * display listener popup window with prompt (default `true`)\r\n   */\r\n  showPopup?: boolean;\r\n}\r\n\r\n/**\r\n * @name Speech Recognition\r\n * @description\r\n * This plugin does speech recognition using cloud services\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { SpeechRecognition } from '@ionic-native/speech-recognition';\r\n *\r\n * constructor(private speechRecognition: SpeechRecognition) { }\r\n *\r\n * ...\r\n *\r\n *\r\n *\r\n * // Check feature available\r\n * this.speechRecognition.isRecognitionAvailable()\r\n *   .then((available: boolean) => console.log(available))\r\n *\r\n * // Start the recognition process\r\n * this.speechRecognition.startListening(options)\r\n *   .subscribe(\r\n *     (matches: Array<string>) => console.log(matches),\r\n *     (onerror) => console.log('error:', onerror)\r\n *   )\r\n *\r\n * // Stop the recognition process (iOS only)\r\n * this.speechRecognition.stopListening()\r\n *\r\n * // Get the list of supported languages\r\n * this.speechRecognition.getSupportedLanguages()\r\n *   .then(\r\n *     (languages: Array<string>) => console.log(languages),\r\n *     (error) => console.log(error)\r\n *   )\r\n *\r\n * // Check permission\r\n * this.speechRecognition.hasPermission()\r\n *   .then((hasPermission: boolean) => console.log(hasPermission))\r\n *\r\n * // Request permissions\r\n * this.speechRecognition.requestPermission()\r\n *   .then(\r\n *     () => console.log('Granted'),\r\n *     () => console.log('Denied')\r\n *   )\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'SpeechRecognition',\r\n  plugin: 'cordova-plugin-speechrecognition',\r\n  pluginRef: 'plugins.speechRecognition',\r\n  repo: 'https://github.com/pbakondy/cordova-plugin-speechrecognition',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class SpeechRecognition extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Check feature available\r\n   * @return {Promise<boolean>}\r\n   */\r\n  @Cordova()\r\n  isRecognitionAvailable(): Promise<boolean> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Start the recognition process\r\n   * @return {Promise< Array<string> >} list of recognized terms\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse',\r\n    observable: true,\r\n\r\n  })\r\n  startListening(options?: SpeechRecognitionListeningOptions): Observable<Array<string>> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Stop the recognition process\r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS']\r\n  })\r\n  stopListening(): Promise<void> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Get the list of supported languages\r\n   * @return {Promise< Array<string> >} list of languages\r\n   */\r\n  @Cordova()\r\n  getSupportedLanguages(): Promise<Array<string>> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Check permission\r\n   * @return {Promise<boolean>} has permission\r\n   */\r\n  @Cordova()\r\n  hasPermission(): Promise<boolean> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Request permissions\r\n   * @return {Promise<void>}\r\n   */\r\n  @Cordova()\r\n  requestPermission(): Promise<void> {\r\n    return;\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}